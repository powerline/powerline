#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''Powerline prompt and statusline script.'''
import argparse
import sys
import json
from powerline.lib import parsedotval

try:
	from powerline.shell import ShellPowerline
except ImportError:
	import os
	sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
	from powerline.shell import ShellPowerline  # NOQA

parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('ext', nargs=1)
parser.add_argument('side', nargs='?', choices=('left', 'right'))
parser.add_argument('-r', '--renderer_module', metavar='MODULE', type=str)
parser.add_argument('-w', '--width', type=int)
parser.add_argument('--last_exit_code', metavar='INT', type=int)
parser.add_argument('--last_pipe_status', metavar='LIST', default='', type=lambda s: [int(status) for status in s.split()])
parser.add_argument('-c', '--config', metavar='KEY.KEY=VALUE', type=parsedotval, action='append')
parser.add_argument('-t', '--theme_option', metavar='THEME.KEY.KEY=VALUE', type=parsedotval, action='append')
parser.add_argument('-p', '--config_path', metavar='PATH')

if __name__ == '__main__':
	args = parser.parse_args()
	powerline = ShellPowerline(args)
	rendered = powerline.renderer.render(width=args.width, side=args.side)
	try:
		sys.stdout.write(rendered)
	except UnicodeEncodeError:
		sys.stdout.write(rendered.encode('utf-8'))
